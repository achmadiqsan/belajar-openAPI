openapi: '3.0.3'
info:
  title: Todolist RESTful API
  version: '1.0'
  description: OpenAPI for Todolist RESTful API
  termsOfService: https://www.programmerzamannow.com
  contact:
    name: Achmad Iqsan
    email: achmad.iqsan@gmail.com
    url: https://www.programmerzamannow.com
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://{environment}.programmerzamannow.com/api/v1
    variables: 
      environment:
        default: dev
        enum:
          - "dev"
          - "qa"
          - "prod"
        description: Server Environment
    description: Todolist RESTful API Server
externalDocs:
  url: https://www.youtube.com/@achmadiqsan
  description: Youtube Achmad Iqsan
paths:
  /todolist:
    get:
      security:
        - TodolistAuth: []
      tags:
        - Todolist
      summary: Get all todolist
      description: Get all active todolist by default
      parameters:
        - in: query
          name: include_done
          required: false
          description: Is include done todolist
          schema: 
            type: boolean
            nullable: true
            default: false
        - in: query
          name: name
          required: false
          description: Filter todolist by name
          schema:
            type: string
            nullable: true
            minLength: 1
            maxLength: 100
          examples:
            java:
              description: Example name Java
              value: Java
            php:
              description: Example name PHP
              value: PHP
      responses: 
        200:
          description: Success get all todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTodolist'
                # type: array
                # items:
                #   type: object
                #   properties:
                #     id:
                #       type: string
                #     name:
                #       type: string
                #     priority:
                #       type: number
                #       format: int32
                #     tags:
                #       type: array
                #       items:
                #         type: string
              examples:
                success:
                  description: Example success get all todolist
                  value:
                    - id: 1
                      name: Java
                      priority: 3
                      tags:
                        - Java
                        - Programming
                    - id: 2
                      name: PHP
                      priority: 5
                      tags:
                        - PHP
                        - Programming
    post:
      security:
        - TodolistAuth: []
      tags:
        - Todolist
      summary: Create new todolist
      description: Create new todolist to database
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTodolist'
              # type: object
              # properties:
                # name:
                #   type: string
                #   minLength: 1
                #   required: 
                #     - "true"
                # priority:
                #   type: integer
                #   format: int32
                #   required:
                #     - "true"
                #   default: 1
                # tags:
                #   type: array
                #   required:
                #     - "false"
                #   minLength: 1
                #   items:
                #     type: string
                #     minLength: 1
            examples:
              java:
                description: Example create todolist Java
                value:
                  name: Java
                  priority: 3
                  tags:
                    - Java
                    - Programming
              php:
                description: Example create todolist PHP
                value:
                  name: PHP
                  priority: 3
                  tags:
                    - PHP
                    - Programming
      responses: 
        200: 
          description: Success create todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
                # type: object
                # properties:
                #   name:
                #     type: string
                #     minLength: 1
                #     required: 
                #       - "true"
                #   priority:
                #     type: integer
                #     format: int32
                #     required:
                #       - "true"
                #     default: 1
                #   tags:
                #     type: array
                #     required:
                #       - "false"
                #     minLength: 1
                #     items:
                #       type: string
                #       minLength: 1
              examples:
                java:
                  description: Success create java todolist
                  value: 
                    id: 1
                    name: Java
                    priority: 3
                    tags:
                      - Java
                      - Programming
                php:
                  description: success create php todolist
                  value: 
                    id: 2
                    name: PHP
                    priority: 5
                    tags:
                      - PHP
                      - Programming
  /todolist/{todolistId}:
    put:
      security:
        - TodolistAuth: []
      tags:
        - Todolist
      summary: Update existing todolist
      description: Update existing todolist in database
      parameters:
        - $ref: '#/components/parameters/TodolistId'
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTodolist'
              # type: object
              # properties:
              #   name:
              #     type: string
              #     minLength: 1
              #     required:
              #       - "true"
              #   priority:
              #     type: integer
              #     format: int32
              #     default: 1
              #     required:
              #       - "true"
              #   tags:
              #     type: array
              #     required:
              #       - "false"
              #     minLength: 1
              #     items:
              #       type: string
              #       minLength: 1
            examples:
              java:
                description: Example create todolist Java
                value:
                  name: Java
                  priority: 3
                  tags:
                    - Java
                    - Programming
              php:
                description: Example create todolist PHP
                value:
                  name: PHP
                  priority: 3
                  tags:
                    - PHP
                    - Programming
      responses:
        200: 
          description: Success Update todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todolist'
                # type: object
                # properties:
                #   name:
                #     type: string
                #     minLength: 1
                #     required: 
                #       - "true"
                #   priority:
                #     type: integer
                #     format: int32
                #     required:
                #       - "true"
                #     default: 1
                #   tags:
                #     type: array
                #     required:
                #       - "false"
                #     minLength: 1
                #     items:
                #       type: string
                #       minLength: 1
              examples:
                java:
                  description: Success create java todolist
                  value: 
                    id: 1
                    name: Java
                    priority: 3
                    tags:
                      - Java
                      - Programming
                php:
                  description: success create php todolist
                  value: 
                    id: 2
                    name: PHP
                    priority: 5
                    tags:
                      - PHP
                      - Programming
    delete:
      security:
        - TodolistAuth: []
      tags:
        - Todolist
      summary: Delete existing todolist
      description: Delete existing todolist in database
      parameters:
        - $ref: '#/components/parameters/TodolistId'
        # - in: path
        #   name: todolistId
        #   required: true
        #   description: Todolist id for Deleted
        #   schema:
        #     type: string
        #     minLength: 1
        #     maxLength: 100
      responses: 
        200: 
          description: Success delete todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                success:
                  description: Success delete todolist
                  value:
                    success: true
        404: 
          description: Failed delete not found todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              examples:
                failed:
                  description: Failed delete todolist
                  value:
                    success: false
components:
  securitySchemes:
    TodolistAuth:
      description: Authentication for Todolist RESTful API
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    TodolistId:
        in: path
        name: todolistId
        required: true
        description: Todolist id for Updated
        schema:
          type: string
          minLength: 1
          maxLength: 100
        examples:
          java:
            description: Sample todolist id for Java
            value: 1
          php:
            description: Sample todolist id for PHP
            value: 2
  schemas:
    Todolist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items: 
            type: string
    CreateOrUpdateTodolist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items: 
            type: string
    ArrayTodolist:
      type: array
      items:
        $ref: '#/components/schemas/Todolist'
        # type: object
        # properties:
        #   id:
        #     type: string
        #   name:
        #     type: string
        #   priority:
        #     type: number
        #     format: int32
        #   tags:
        #     type: array
        #     items: 
        #       type: string

